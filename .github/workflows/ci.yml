name: CI/CD - FinMath

on:
  push:
    branches: [ main, sprint-* ]
  pull_request:
    branches: [ main ]

jobs:
  # Job 1: Lint e Type Check
  lint-and-typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install pnpm
        run: npm install -g pnpm@10.18.3
      
      - name: Install dependencies
        run: pnpm install
      
      - name: ESLint
        run: pnpm lint
      
      - name: TypeScript Type Check
        run: pnpm run type-check || echo "Type check script not found"

  # Job 2: Unit Tests
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install pnpm
        run: npm install -g pnpm@10.18.3
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Run unit tests
        run: pnpm test:unit || echo "Unit tests script not found"

  # Job 3: E2E Tests
  e2e-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install pnpm
        run: npm install -g pnpm@10.18.3
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}
      
      - name: Run E2E tests
        run: pnpm test:e2e --project=${{ matrix.browser }}
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: test-results/
          retention-days: 30

  # Job 4: Accessibility Tests
  a11y-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install pnpm
        run: npm install -g pnpm@10.18.3
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium
      
      - name: Run accessibility tests
        run: pnpm test:a11y || npx playwright test tests/a11y
      
      - name: Generate A11y Report
        if: always()
        run: npx ts-node tests/utils/generate-a11y-report.ts
      
      - name: Upload A11y Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: a11y-report
          path: docs/a11y/
          retention-days: 30

  # Job 5: Build
  build:
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, unit-tests]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install pnpm
        run: npm install -g pnpm@10.18.3
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Build
        run: pnpm build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

  # Job 6: Deploy (somente em main)
  deploy:
    runs-on: ubuntu-latest
    needs: [build, e2e-tests, a11y-tests]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
