#!/usr/bin/env bash
# reflect_prune_via_pr.sh
# Reflete dele√ß√µes/modifica√ß√µes atuais criando um branch e um PR para main (respeitando branch protection).

set -euo pipefail

# 0) Pr√©-requisitos
command -v git >/dev/null || { echo "‚ùå git n√£o encontrado"; exit 1; }
command -v gh  >/dev/null || { echo "‚ùå GitHub CLI (gh) n√£o encontrado"; exit 1; }
git rev-parse --is-inside-work-tree >/dev/null 2>&1 || { echo "‚ùå N√£o √© um reposit√≥rio Git"; exit 1; }
git remote get-url origin >/dev/null 2>&1 || { echo "‚ùå Remoto 'origin' n√£o configurado"; exit 1; }

# 1) Garantir main limpa e atualizada
git switch main
git pull --ff-only
if ! git diff --quiet || ! git diff --cached --quiet; then
  echo "‚ùå H√° mudan√ßas pendentes em 'main'. Fa√ßa stash/commit antes."; exit 1;
fi

# 2) Criar branch de trabalho
TS="$(date +%Y%m%d-%H%M%S)"
BR="prune-${TS}"
git switch -c "$BR"

# (Opcional) Ignorar artefatos de teste se existirem
if [ -d "playwright-report" ] || [ -d "test-results" ]; then
  { echo; echo "playwright-report/"; echo "test-results/"; } >> .gitignore || true
fi

# 3) Indexar tudo (inclui dele√ß√µes)
git add -A

# 4) Abortar se n√£o houver mudan√ßas
if git diff --cached --quiet; then
  echo "‚ÑπÔ∏è Nada a commitar. O reposit√≥rio j√° reflete o prune."; exit 0;
fi

# 5) M√©tricas e commit
DEL_STAGED="$(git diff --cached --name-only --diff-filter=D | wc -l | tr -d ' ')"
ADD_STAGED="$(git diff --cached --name-only --diff-filter=A | wc -l | tr -d ' ')"
MOD_STAGED="$(git diff --cached --name-only --diff-filter=M | wc -l | tr -d ' ')"
COMMIT_MSG="chore(repo): refletir prune ‚Äî ${DEL_STAGED:-0} dele√ß√µes, ${ADD_STAGED:-0} adi√ß√µes, ${MOD_STAGED:-0} modifica√ß√µes"
git commit -m "$COMMIT_MSG"
git push -u origin "$BR"

# 6) Criar PR (tentando auto-merge por squash; se a pol√≠tica permitir ele ser√° aplicado)
TITLE="refletir prune (${TS}) ‚Äî ${DEL_STAGED}D/${ADD_STAGED}A/${MOD_STAGED}M"
BODY="$(cat <<'EOF'
Reflete a limpeza de arquivos (prune) no reposit√≥rio.

**Resumo**
- Dele√ß√µes: ${DEL_STAGED}
- Adi√ß√µes:  ${ADD_STAGED}
- Modifica√ß√µes: ${MOD_STAGED}

_Gerado pelo script `reflect_prune_via_pr.sh`._
EOF
)"
PR_URL="$(gh pr create --base main --title "$TITLE" --body "$BODY")" || {
  echo "‚ùå Falha ao criar PR via gh."; exit 1;
}

# 7) Tentar habilitar auto-merge (squash). Ignora erro se n√£o permitido.
gh pr merge --squash --auto "$PR_URL" 2>/dev/null || true

echo "‚úÖ PR criado: $PR_URL"
echo "üìù $COMMIT_MSG"
